<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quicker.sana.mqjob.mapper.JobDetailsMapper">
  <resultMap id="BaseResultMap" type="com.quicker.sana.mqjob.pojo.JobDetails">
    <id column="job_detail_code" jdbcType="VARCHAR" property="jobDetailCode" />
    <result column="job_request" jdbcType="VARCHAR" property="jobRequest" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="job_type" jdbcType="INTEGER" property="jobType" />
    <result column="job_response" jdbcType="VARCHAR" property="jobResponse" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <if test="fields == null">
      job_detail_code, job_request, createtime, job_type, job_response
    </if>
    <if test="fields != null">
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" parameterType="com.quicker.sana.mqjob.pojo.JobDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    job_detail_code,job_request,createtime,job_type,job_response
    from job_details
    where job_detail_code = #{jobDetailCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from job_details
    where job_detail_code = #{jobDetailCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.quicker.sana.mqjob.pojo.JobDetailsExample">
    delete from job_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.quicker.sana.mqjob.pojo.JobDetails">
    insert into job_details (job_detail_code, job_request, createtime, 
      job_type, job_response)
    values (#{jobDetailCode,jdbcType=VARCHAR}, #{jobRequest,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{jobType,jdbcType=INTEGER}, #{jobResponse,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.quicker.sana.mqjob.pojo.JobDetails">
    insert into job_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobDetailCode != null">
        job_detail_code,
      </if>
      <if test="jobRequest != null">
        job_request,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="jobType != null">
        job_type,
      </if>
      <if test="jobResponse != null">
        job_response,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobDetailCode != null">
        #{jobDetailCode,jdbcType=VARCHAR},
      </if>
      <if test="jobRequest != null">
        #{jobRequest,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobType != null">
        #{jobType,jdbcType=INTEGER},
      </if>
      <if test="jobResponse != null">
        #{jobResponse,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.quicker.sana.mqjob.pojo.JobDetailsExample" resultType="java.lang.Long">
    select count(*) from job_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update job_details
    <set>
      <if test="record.jobDetailCode != null">
        job_detail_code = #{record.jobDetailCode,jdbcType=VARCHAR},
      </if>
      <if test="record.jobRequest != null">
        job_request = #{record.jobRequest,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.jobType != null">
        job_type = #{record.jobType,jdbcType=INTEGER},
      </if>
      <if test="record.jobResponse != null">
        job_response = #{record.jobResponse,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update job_details
    set job_detail_code = #{record.jobDetailCode,jdbcType=VARCHAR},
      job_request = #{record.jobRequest,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      job_type = #{record.jobType,jdbcType=INTEGER},
      job_response = #{record.jobResponse,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.quicker.sana.mqjob.pojo.JobDetails">
    update job_details
    <set>
      <if test="jobRequest != null">
        job_request = #{jobRequest,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobType != null">
        job_type = #{jobType,jdbcType=INTEGER},
      </if>
      <if test="jobResponse != null">
        job_response = #{jobResponse,jdbcType=VARCHAR},
      </if>
    </set>
    where job_detail_code = #{jobDetailCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quicker.sana.mqjob.pojo.JobDetails">
    update job_details
    set job_request = #{jobRequest,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      job_type = #{jobType,jdbcType=INTEGER},
      job_response = #{jobResponse,jdbcType=VARCHAR}
    where job_detail_code = #{jobDetailCode,jdbcType=VARCHAR}
  </update>
</mapper>